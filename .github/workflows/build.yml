name: Build, Test, and Run [OMIT_DEPRECATED=true]

on:
  push:
  pull_request:

env:
  SIMULATION: native
  ENABLE_UNIT_TESTS: true
  OMIT_DEPRECATED: true
  BUILDTYPE: release
  PERMISSIVE_MODE: true

jobs:

  #Checks for duplicate actions. Skips push actions if there is a matching or duplicate pull-request action. 
  check-for-duplicates:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content'
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
          
  build-osal:
    name: Build
    #Continue if check-for-duplicates found no duplicates. Always runs for pull-requests.
    needs: check-for-duplicates
    if: ${{ needs.check-for-duplicates.outputs.should_skip != 'true' }}
    runs-on: ubuntu-18.04
    timeout-minutes: 15

    steps:
      - name: Checkout submodule
        uses: actions/checkout@v2

      - name: Set up for build
        run: |
          cp Makefile.sample Makefile
          make prep
          
      - name: Build
        run: make -j 

    test-osal:
    name: Test
    runs-on: ubuntu-18.04
    needs: build-osal

    strategy:
      fail-fast: false
      matrix:
        buildtype: [debug, release]

    # Set the type of machine to run on
    env:
      BUILDTYPE: ${{ matrix.buildtype }}
      ENABLE_UNIT_TESTS: true


    steps:
      - name: Install Dependencies
        run: sudo apt-get install lcov -y

      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      # Setup the build system
      - name: Copy Files
        run: |
          cp ./cfe/cmake/Makefile.sample Makefile
          cp -r ./cfe/cmake/sample_defs sample_defs
          
      # Setup the build system
      - name: Make
        run: make

      - name: Run Tests
        run: make test

      - name: Check Coverage
        run: make lcov

  run-cfs:
    name: Run
    needs: build-osal
    runs-on: ubuntu-18.04

    strategy:
      fail-fast: false
      matrix:
        buildtype: [debug, release]

    # Set the type of machine to run on
    env:
      BUILDTYPE: ${{ matrix.buildtype }}

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      # Setup the build system
      - name: Copy sample_defs
        run: |
          cp ./cfe/cmake/Makefile.sample Makefile
          cp -r ./cfe/cmake/sample_defs sample_defs
      # Setup the build system
      - name: Make Install
        run: make install

      - name: List cpu1
        run: ls build/exe/cpu1/

      - name: Run cFS
        run: |
          ./core-cpu1 > cFS_startup_cpu1.txt &
          sleep 30
          ../host/cmdUtil --endian=LE --pktid=0x1806 --cmdcode=2 --half=0x0002
        working-directory: ./build/exe/cpu1/

      - name: Archive cFS Startup Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cFS-startup-log-deprecate-true-${{ matrix.buildtype }}
          path: ./build/exe/cpu1/cFS_startup_cpu1.txt

      - name: Check for cFS Warnings
        run: |
          if [[ -n $(grep -i "warn\|err\|fail" cFS_startup_cpu1.txt) ]]; then
                  echo "Must resolve warn|err|fail in cFS startup before submitting a pull request"
                  echo ""
                  grep -i 'warn\|err\|fail' cFS_startup_cpu1.txt
                  exit -1
          fi
        working-directory: ./build/exe/cpu1/
        
